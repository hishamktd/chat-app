generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                  Int       @id @default(autoincrement())
  user_id             Int
  provider            String    @db.VarChar(255)
  provider_account_id String    @db.VarChar(255)
  created_at          DateTime? @default(now()) @db.Timestamp(6)
  updated_at          DateTime? @default(now()) @db.Timestamp(6)
  users               users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model chat_room_messages {
  id         Int       @id @default(autoincrement())
  userid     Int?
  text       String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sessions {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique(map: "sessions_session_token_key")
  user_id      Int
  expires      DateTime  @db.Timestamp(6)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  users        users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_tokens {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  token      String
  expires_at DateTime @db.Timestamptz(6)
  users      users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                 Int                  @id @default(autoincrement())
  username           String               @unique @db.VarChar(255) 
  email              String               @unique @db.VarChar(255)
  password           String               @db.VarChar(255)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  accounts           accounts[]
  chat_room_messages chat_room_messages[]
  sessions           sessions[]
  user_tokens        user_tokens[]
}

model verification_tokens {
  identifier String?
  token      String   @unique
  expires    DateTime @db.Timestamptz(6)
}
